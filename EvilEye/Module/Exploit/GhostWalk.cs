using Photon.Realtime;
using EvilEye.Events;
using EvilEye.Module;
using Harmony;
using Il2CppSystem;

namespace EvilEye.Modules.Exploits
{
    class GhostWalk : BaseModule, OnSendOPEvent
    {
        private bool ghostWalk;
        public GhostWalk() : base("Serialization\nDisabled", "Freezes You Server Sided", Main.Instance.exploistButton, null, true) {
            ghostWalk = !ghostWalk;
            this.name = $"Serialization\n{(ghostWalk ? "Enabled" : "Disabled")}";
        }

        public override void OnEnable()
        {
            Main.Instance.onSendOPEvents.Add(this);
        }

        //Harmony Patch
        //Instance.Patch(AccessTools.Method(typeof(LoadBalancingClient), "Method_Public_Virtual_New_Boolean_Byte_Object_RaiseEventOptions_SendOptions_0"), GetPatch(nameof(OpRaiseEvent)));

        public override void OnDisable()
        {
            Main.Instance.onSendOPEvents.Remove(this);
        }

        public bool OnSendOP(byte opCode, Object parameters, RaiseEventOptions raiseEventOptions)
        {
            try
            {
                if (ghostWalk && opCode == 7) return false;

                //Harmony Patch
                //Instance.Patch(AccessTools.Method(typeof(LoadBalancingClient), "Method_Public_Virtual_New_Boolean_Byte_Object_RaiseEventOptions_SendOptions_0"), GetPatch(nameof(OpRaiseEvent)));

                //__0 is opCode
                //__1 is parameters
                //__2 is RaiseEventOption
                //Blaze Gave me this don't know what to do with it though.
            }
            catch { }
            return true;
        }

    }
}
